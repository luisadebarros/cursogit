git init -> inciar o git em uma pasta
git config -> configurar nome, email, senha etc
git config --list -> ver configuraçoes salvas


em vermelho -> arquivos modificados
git add -> arquivos adicionadas e protos para subir para o git
git amarelo -> prontos para serem salvos
git commit -> salvar  
git verde -> arquivo salvos

gir status -> ver situaçao do estado do repositório
echo "Exemplos para aula 1" > anotacoes.txt -> criar nova arquivo
git add . -> adicionar os arquivos para o commit
git commit (-a addiciona o arquivo) -m "mensagem" -> fazer commit com mensgaem
git diff -> mostrar as alterações


.gitignore -> arquivos para ser ignorados (criar um arquivo chamando .gitignore e colocar os diretorios e arquivos a serem ignorados)

git log -> histórico de commits 
git log --oneline -> histórico de commits (em uma linha)

git reset -> voltar para 
git reset --soft -> vai voltando 1 versão para o arquivo porém só no repositório local 
git reset --mixed -> vai voltando 1 versão para o arquivo porém no add e repositório local
git reset --hard -> vai voltando 1 versão para o arquivo em tudo

git branch nomedabranch -> criar a branch
git checkout nomedabranch -> mudar para branch 
git branch -> listar branchs

git branch -m novonome -> mudar o nome da branch do momento
git branch -D desenvolvedor -> apagar a branch sem merge
git branch -d desenvolvedor -> apagar a branch com merge

git stash -> coloca em pausa o commit, sem que se perca os arquivos (memória do git utilizando)
git stash apply -> aplicar o que foi aplicado na lista
git stash drop stash@{matriznumero} -> elimina o que foi aplicado na lista
git stash pop -> recorta o arquivo para o repositório local (apply e drop junto)


git clone link -> baixar o repositório para a máquina local
git push -> enviar o repositório para a nuvem

git remote add oringin https://github.com/luisadebarros/cursogit.git -> quando criarmos um repositorio no github depois, ele pega o repositorio já criado na máquina e leva para a nuvem